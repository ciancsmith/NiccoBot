apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "niccobot.fullname" . }}
  labels:
    {{- include "niccobot.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "niccobot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "niccobot.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          env:
            - name: DOTENV
              value: "/niccobot/.env"
            - name: SQL_DB
              value: "sqlite:///var/lib/data/database.sqlite"
            - name: DISCORD_TOKEN
              value: "MTE4NDQ3MTM1MjM1OTUzODgyOA.GTDXhH.nh3O9GTWgXklNlWfGpqvwSz4LoFNWKnOampVnk"
            - name: OPENAI_API_KEY
              value: "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"
            - name: RUST_LOG
              value: "niccobot=info"
            - name: MIGRATIONS_DIR
              value: "/niccobot/migrations/"

          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: sqlite-storage
              mountPath: "/var/lib/data"
      volumes:
        - name: sqlite-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistentVolumeClaim.name }}
      imagePullSecrets:
      - name: regcred